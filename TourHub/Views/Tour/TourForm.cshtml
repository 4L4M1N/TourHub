@model TourHub.ViewModels.TourFormViewModel
@{
    ViewBag.Title = Model.Heading;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row pt-3">
    <div class="col-md-8"id="tourform">
        
    </div>
    <div class="col-md-4">
        <div class="card shadow p-3 bg-white rounded">
            <div class="card-header">
                @Model.Heading
            </div>
            <div class="card-body">
                @using (Html.BeginForm(Model.Action, "Tour"))
                {
                    <p class="alert alert-info">All fields are <strong>Required</strong></p>
                    @Html.AntiForgeryToken() @*CSRF attack*@
                    @Html.HiddenFor(m =>m.Id)
                    <div class="form-group">
                        @Html.LabelFor(m => m.Place)
                        @Html.TextBoxFor(m => m.Place, new { @class = "form-control", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(m => m.Place)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Cost)
                        @Html.TextBoxFor(m => m.Cost, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Cost)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.TotalSeat)
                        @Html.TextBoxFor(m => m.TotalSeat, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.TotalSeat)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Date)
                        @Html.TextBoxFor(m => m.Date, new { @class = "form-control", placeholder = "eg 1 Jan 2019" })
                        @Html.ValidationMessageFor(m => m.Date)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Time)
                        @Html.TextBoxFor(m => m.Time, new { @class = "form-control", placeholder = "eg 20:20" })
                        @Html.ValidationMessageFor(m => m.Time)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Genre)
                        @Html.DropDownListFor(m => m.Genre, new SelectList(Model.Genres, "id", "name"), "Select One", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Genre)
                    </div>
                    {
                        if (HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString() == "Create")
                        {
                            <button type="submit" class="btn btn-primary">Create</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-primary">Save</button>
                        }
                    }


                }
            </div>
        </div>
    </div>
</div>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    }

